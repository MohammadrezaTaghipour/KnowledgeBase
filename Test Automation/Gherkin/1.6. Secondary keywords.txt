There are a few secondary keywords:

- """ (Doc Strings)
- | (Data Tables)
- @ (Tags)
- \# (Comments)


</br>

# Doc Strings

Doc Strings are handy for passing a larger piece of text to a step definition. The text should be offset by delimiters consisting of three double-quote marks on lines of their own:

    Given a blog post named "Random" with Markdown body
    """
    Some Title, Eh?
    ===============
    Here is the first paragraph of my blog post. Lorem ipsum dolor sit amet,
    consectetur adipiscing elit.
    """

In your step definition, there’s no need to find this text and match it in your pattern. It will automatically be passed as the last argument in the step definition.

Indentation of the opening """ is unimportant, although common practice is two spaces in from the enclosing step. The indentation inside the triple quotes, however, is significant. Each line of the Doc String will be dedented according to the opening """. Indentation beyond the column of the opening """ will therefore be preserved.

Doc strings also support using three backticks as the delimiter:
    
    Given a blog post named "Random" with Markdown body
    ```
    Some Title, Eh?
    ===============
    Here is the first paragraph of my blog post. Lorem ipsum dolor sit amet,
    consectetur adipiscing elit.
    ```

It’s possible to annotate the DocString with the type of content it contains. You specify the content type after the triple quote, as follows:


    Given a blog post named "Random" with Markdown body
    """markdown
    Some Title, Eh?
    ===============
    Here is the first paragraph of my blog post. Lorem ipsum dolor sit amet,
    consectetur adipiscing elit.
    """

</br>

# Data Tables

Data Tables are handy for passing a list of values to a step definition:

    Given the following users exist:
    | name   | email              | twitter         |
    | Aslak  | aslak@cucumber.io  | @aslak_hellesoy |
    | Julien | julien@cucumber.io | @jbpros         |
    | Matt   | matt@cucumber.io   | @mattwynne      |
    Just like Doc Strings, Data Tables will be passed to the step definition as the last argument.

# Table Cell Escaping

If you want to use a newline character in a table cell, you can write this as \n. If you need a | as part of the cell, you can escape it as \|. And finally, if you need a \, you can escape that with \\.


